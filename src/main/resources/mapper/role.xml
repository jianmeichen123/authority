<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
  
<mapper namespace="com.galaxy.authority.dao.role.IRoleDao">
	<!-- 列表查询字段 -->
	<sql id="getRoleListHeader">
		select r.id,
		    r.role_name roleName,
		    r.role_code roleCode,
		    r.role_demo roleDemo
		from role r
	</sql>
	<!-- 列表查询条件 -->
	<sql id="getRoleListWhere" >
		where r.is_del=0
		<!-- and r.is_outtage=0 -->
		<if test="companyId != null ">and r.company_id=#{companyId}</if>
	</sql>
	
	<!-- 通过id获取角色信息 -->
	<select id="getRoleById" resultType="com.galaxy.authority.bean.role.RoleBean" parameterType="long">
		select id roleId,role_code roleCode, role_name roleName,is_outtage isOuttage  from role where id=#{id};
	</select>
	
	<!-- 获取角色的列表 -->
	<select id="getRoleList" parameterType="hashmap" resultType="hashmap">
		<include refid="getRoleListHeader"/>
		<include refid="getRoleListWhere"/>
			order by r.create_time desc
			limit #{startNo},#{pageSize};
	</select>
	
	<!-- 获取角色列表总记录数 -->
	<select id="getRoleListCount" resultType="Integer" parameterType="Map">
		select count(1) from role r 
		<include refid="getRoleListWhere"/>
	</select>
	
	<!-- 保存角色 -->
	<insert id="saveRole" parameterType="com.galaxy.authority.bean.role.RoleBean" useGeneratedKeys="true" keyProperty="id"  keyColumn="id">
		INSERT INTO `power`.`role` (
			`role_code`, 
			`role_name`, 
			`role_demo`, 
			`is_del`, 
			`is_outtage`, 
			`create_id`, 
			`create_time`, 
			`update_id`, 
			`update_time`, 
			`company_id`
		) VALUES (
			#{roleCode}, 
			#{roleName}, 
			#{roleDemo}, 
			#{isDel}, 
			#{isOuttage}, 
			#{createId}, 
			#{createTime}, 
			#{updateId}, 
			#{updateTime}, 
			#{companyId}
		);
		<selectKey keyProperty="id" resultType="long" order="AFTER">  
            SELECT LAST_INSERT_ID();  
        </selectKey>  
	</insert>
	
	<!-- 更新角色信息 -->
	<update id="updateRole" parameterType="com.galaxy.authority.bean.role.RoleBean">
		update role set role_name=#{roleName},role_code=#{roleCode},role_demo=#{roleDemo}, create_time=#{createTime},update_time=#{updateTime} 
	    where id = #{id};
	</update>
	
	<!-- 删除角色 (修改is_del=1)-->
	<update id="delRoleById" parameterType="Map">
		update `power`.`role` set is_del=1 where
		<if test="id != null ">id=#{id}</if>
	</update>
	
	<!-- 获取角色关联的账号列表 -->
	<select id="getUserListByRoleId" parameterType="hashmap" resultType="hashmap">
		select u.user_name userName from `user` u
		left join rel_role_user ru on u.id = ru.user_id
		WHERE ru.role_id=#{id} and ru.is_del=0 and ru.company_id=#{companyId};
	</select>
	
	<!--通过部门id获取子部门list-->
	<select id="getChildNodesByDeptId" parameterType="hashmap" resultType="hashmap">
		select id,d.dep_name name,d.parent_id parentId
		from department d 
		where d.parent_id=#{parentId} and d.is_del=0 and is_outtage=0 and is_show=0 and company_id=#{companyId} 
		order by index_no;
	</select>
	<!--当前部门id信息-->
	<select id="getcurrNodeByDeptId" parameterType="hashmap" resultType="hashmap">
		select id,d.dep_name name,d.parent_id parentId
		from department d 
		where d.id=#{parentId} and d.is_del=0 and is_outtage=0 and company_id=#{companyId} 
		order by index_no;
	</select>
	
	
	<!--通过部门id获取部门人username-->
	<select id="getUserNameByDeptId" parameterType="hashmap" resultType="hashmap">
		SELECT u.id,u.user_name FROM rel_dep_user du 
		LEFT JOIN `user` u on u.id=du.user_id 
		WHERE du.dep_id=#{id} and u.is_del=0 and u.is_outtage=0 and u.company_id=#{companyId};
	</select>
	
	<!--通过角色id获取绑定账号信息list-->
	<select id="getBindUserInfoListById" parameterType="hashmap" resultType="hashmap">
		select ru.role_id roleId,ru.user_id userId,u.login_name loginName,u.user_name userName,p.pos_name posName 
		from `user` u
		left join rel_role_user ru on u.id = ru.user_id
		left join rel_pos_user pu on u.id = pu.user_id
		left join position p on pu.pos_id = p.id 
		where ru.is_del=0 and ru.role_id=#{id} and ru.company_id=#{companyId} 
		limit #{startNo},#{pageSize};
	</select>
	
	<!-- 检测角色是否有绑定账号 -->
	<select id="checkBindUser" resultType="Integer" parameterType="Map">
		select count(1)
			from user u,role r,rel_role_user ru
			where u.company_id=r.company_id
			and u.company_id=ru.company_id
			and u.id=ru.user_id
			and r.id=ru.role_id
			and r.is_del=0
			and r.is_outtage=0
			and r.id=#{roleId}
			and r.company_id=#{companyId};
	</select>
	
	<!-- 查询资源树型列表 -->
	<select id="getResourceTreeList" parameterType="hashmap" resultType="hashmap">
		select id,resource_name name,parent_id parentId
		from resource 
		where parent_id=#{parentId} and is_del=0 and is_outtage=0 and company_id=#{companyId} 
		order by resource_order;
	</select>
	
	<!-- 获取资源当前节点以及子节点信息list -->
	<select id="getResourceList" parameterType="hashmap" resultType="hashmap">
		select r.id,r.resource_name name,r.parent_id parentId, t.resource_name resourceName,r.resource_desc resourceDESC 
		from resource r
		left join 
    		(SELECT * FROM resource WHERE id=#{parentId}) t
		on r.id = t.id
		where r.parent_id=#{parentId} OR r.id=#{parentId}
		and r.is_del=0 and r.is_outtage=0 and r.company_id=#{companyId} 
		order by r.resource_order asc;
	</select>
	
	<!-- 获取数据范围 -->
	<select id="getDataScope" parameterType="hashmap" resultType="hashmap">
		SELECT id,sp_name spName 
		FROM data_scope 
		WHERE is_del=0 and is_outtage=0 and company_id=#{companyId};
	</select>
	
	<!-- 通过资源id获取关联表信息（用于回显） -->
	<select id="isDisplayByResId" parameterType="hashmap" resultType="hashmap">
		SELECT  r.id rId,s.id sId,s.sp_id spId,su.is_dep isDep,su.other_id otherId
		FROM rel_role_resource r
		LEFT JOIN rel_role_scope s ON r.id=s.role_res_id 
		LEFT JOIN rel_sp_users su ON s.id=su.rel_role_scope_id
		WHERE r.res_id=#{resId} and r.role_id=#{roleId} and r.is_del=0 and r.is_outtage=0 and r.company_id=#{companyId};
	</select>
	
	<!-- 获取部门名称 （用于回显）-->
	<select id="getDeptName" parameterType="hashmap" resultType="hashmap">
		SELECT id,dep_name name 
		FROM department 
		WHERE id=#{deptId} and is_del=0 and is_outtage=0 and company_id=#{companyId};
	</select>
	<!-- 获取用户名称 （用于回显）-->
	<select id="getUserName" parameterType="hashmap" resultType="hashmap">
		SELECT id,user_name name 
		FROM user 
		WHERE id=#{userId} and is_del=0 and is_outtage=0 and company_id=#{companyId};
	</select>
	
	<select id="selectRoleIdByUserId" parameterType="hashmap" resultType="Long">
		SELECT 
		DISTINCT r.id
		FROM role r
		inner join  rel_role_user ru on ru.role_id = r.id and ru.is_del=0 AND ru.is_outtage=0
		WHERE ru.user_id=#{userId} and r.is_del=0 and r.is_outtage=0 and r.company_id=#{companyId}
	</select>
	
	<!-- 角色是否存在 -->
	<select id="isExitRole" resultType="Integer" parameterType="String">
		SELECT COUNT(1) from role WHERE role_name=#{roleName} and is_del=0;
	</select>
	
	<!-- 获取角色关联账号信息（用于回显）-->
	<select id="showUerName" parameterType="hashmap" resultType="hashmap">
		SELECT r.user_id id,u.user_name name FROM rel_role_user r
		LEFT JOIN user u ON r.user_id=u.id WHERE r.role_id=#{roleId}
 		and r.is_del=0 and r.is_outtage=0 and r.company_id=#{companyId};
	</select>
	
	<!-- 已选用户判断是否已经绑定角色-->
	<select id="isRelRoleUser" parameterType="hashmap" resultType="hashmap">
		SELECT u.id, u.user_name name,
			case ru.flag
			WHEN 0 THEN 0
			WHEN 2 THEN 2
			else 1
			end flag
			FROM (
				SELECT COUNT(1) flag 
				FROM rel_role_user ru 
				LEFT JOIN role r on r.id=ru.role_id 
				WHERE user_id=#{userId} and r.is_outtage in(0,2) 
			) ru,user u
		WHERE u.id=#{userId} and u.is_del=0 and u.is_outtage=0 and u.company_id =#{companyId};
		<!-- SELECT u.id, u.user_name name,
		case ru.flag
		WHEN 0 THEN 0
		else 1
		end flag
		FROM (SELECT COUNT(1) flag FROM rel_role_user WHERE user_id=#{userId}) ru,user u
		WHERE u.id=#{userId} and u.is_del=0 and u.is_outtage=0 and u.company_id =#{companyId}; -->
	</select>
	
	<select id="selectRoleCodeByUserId" parameterType="hashmap" resultType="string">
		SELECT 
		DISTINCT r.role_code
		FROM role r
		inner join  rel_role_user ru on ru.role_id = r.id and ru.is_del=0 AND ru.is_outtage=0
		WHERE ru.user_id=#{userId} and r.is_del=0 and r.is_outtage=0 
	</select>
	
	<!-- 获取角色code 临时角色的is_outtage=2 -->
	<select id="getRoleCodeByUserId" parameterType="hashmap" resultType="String">
		SELECT 
		DISTINCT r.role_code
		FROM role r
		inner join  rel_role_user ru on ru.role_id = r.id and ru.is_del=0 AND ru.is_outtage=2
		WHERE ru.user_id=#{userId} and r.is_del=0 and r.is_outtage=2; 
	</select>
	
</mapper>