<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
  
<mapper namespace="com.galaxy.authority.dao.user.IUserDao">

	<!-- 根据姓名模糊查询所有用户并返回所在的部门信息 -->
	<select id="getUsersByKey" parameterType="hashmap" resultType="hashmap">
		select 
			u.id userId,
			u.user_name userName,
		    d.id depId,
		    d.dep_name depName
		from user u 
		left join rel_dep_user rdu on u.id=rdu.user_id
		left join department d on d.id=rdu.dep_id
		where u.user_name like #{userKey}
		and u.company_id=rdu.company_id
		and u.company_id=d.company_id
		and u.is_del=0
		and u.is_outtage=0
		and u.is_show=0
		and u.company_id=#{companyId};
	</select>
	
	<!-- 根据姓名模糊查询所有用户 -->
	<select id="findUserByNameTdj" parameterType="hashmap" resultType="hashmap">
		select 
			u.id userId,
			u.user_name userName
		from user u 
		where u.user_name like #{userKey}
		and u.is_del=0
		and u.is_outtage=0
		and u.is_show=0
		and u.company_id=#{companyId}
	</select>
	
	<!-- 根据用户ID返回用户详情 -->
	<select id="getUserById" parameterType="hashmap" resultType="hashmap">
		select 
			u.id userId,
			u.login_name loginName,
		    u.user_name userName,
		    u.origin_password oriPass,
		    u.email1 mail1,
		    d.id depId,
		    u.company_id compaanyId
		from user u 
		left join rel_dep_user rdu on u.id=rdu.user_id
		left join department d on d.id=rdu.dep_id
		where u.id=#{userId}
		<if test="companyId != null">and u.company_id=#{companyId}</if>
	</select>
	
	<!-- 根据给定的部门ID取得对应的所有用户 -->
	<select id="getUsersByDepId" parameterType="hashmap" resultType="hashmap">
		select 
			u.id userId,
		    u.user_name userName
		from user u
		left join rel_dep_user rdu on u.id=rdu.user_id
		left join department d on d.id=rdu.dep_id
		where u.company_id=d.company_id
		and u.is_del=0
		and u.is_outtage=0
		and u.is_show=0
		<if test="companyId != null">and u.company_id=#{companyId} </if>
		<if test="depId != null">and d.id=#{depId} </if>
		<if test="depIds != null">
			<foreach collection="depIds" item="item" open=" and d.id in (" separator="," close=")">
				#{item}
			</foreach>
		</if>
		
	</select>
	
	<!-- 根据用户ID的集合取得对应的用户 -->
	<select id="getUserByIds" parameterType="hashmap" resultType="hashmap">
		select 
			u.id userId,
		    u.user_name userName,
		    u.is_del isDel,
		    u.is_outtage isOuttage,
		    u.is_show isShow
		from user u 
		where u.company_id=${companyId}
		and u.id in
		<foreach item="item" index="index" collection="userIdList" open="(" separator="," close=")">  
			  #{item}  
		</foreach>
	</select>
	
	<!-- 重置密码 -->
	<update id="resetPassword" parameterType="hashMap">
		update user u set 
			u.password=#{password}
		where u.id=#{userId}
		and u.company_id=#{companyId};
	</update>

	<!-- 禁用或启用 -->
	<update id="outtageUser" parameterType="hashMap">
		update user u set u.is_outtage=${isOuttage} where u.id=#{id} and u.company_id=#{companyId};
	</update>
	
	<!-- 删除 -->
	<update id="deleteUser" parameterType="hashMap">
		update user u set u.is_del=1 where u.id=#{id} and u.company_id=#{companyId};
	</update>
	
	<!-- 编辑 -->
	<update id="editUser" parameterType="com.galaxy.authority.bean.user.UserBean">
		update user u set 
		u.login_name=#{loginName},
		u.user_name=#{userName},
		u.mobile_phone=#{mobilePhone},
		u.email1=#{email1},
		u.update_time=#{updateTime}
		where u.id=#{id} and u.company_id=#{companyId};
	</update>
	
	<!-- 取得对应父级部门的列表 -->
	<select id="getUserList" parameterType="hashmap" resultType="hashmap">
		<include refid="getUserListHeader"></include>
		<include refid="getUserListWhere"/>
			order by u.create_time desc
			limit #{startNo},#{pageSize};
	</select>
	
	<!-- 获取总记录数 -->
	<select id="getUserListCount" resultType="Integer" parameterType="Map">
		select count(1) from user u
			left join rel_dep_user rdu on rdu.user_id=u.id
            left join rel_pos_user rpu on rpu.user_id=u.id
			left join department d on rdu.dep_id=d.id
			left join position p on rpu.pos_id=p.id
		<include refid="getUserListWhere"/>
	</select>
	
	<!-- 列表字段 -->
	<sql id="getUserListHeader">
				select 
			u.id userId,
		    u.login_name loginName,
		    u.user_name userName,
		    u.telphone telPhone,
			u.mobile_phone mobilePhone,
			u.email1 email1,
		    u.sex sex,
		    u.is_outtage isOuttage,
		    u.create_id createId,
		    u.create_time createTime,
		    u.update_id updateId,
		    u.update_time updateTime,
		    u.employ_no employNo,
		    u.address address,
			d.id depId,
		    d.dep_name depName,
		    p.id posId,
		    p.pos_name posName
		from user u
			left join rel_dep_user rdu on rdu.user_id=u.id
            left join rel_pos_user rpu on rpu.user_id=u.id
			left join department d on rdu.dep_id=d.id
			left join position p on rpu.pos_id=p.id
	</sql>
	
	<!-- 列表查询条件 -->
	<sql id="getUserListWhere" >
		where u.company_id=d.company_id and
		    u.company_id=rdu.company_id and 
		    u.company_id=rpu.company_id and
		    u.is_del=0
		<if test="loginName != null ">and u.login_name like #{loginName}</if>
		<if test="userName != null ">and u.user_name like #{userName}</if>
		<if test="email1 != null ">and u.email1 like #{email1}</if>
		<if test="positionId != null ">and p.id=#{positionId}</if>
		<if test="state != null ">and u.is_outtage=#{state}</if>
		<if test="departmentId != null ">and d.id=#{departmentId}</if>
		<if test="isShow != null ">and u.is_show=#{isShow}</if>
	</sql>
	
	<!-- 编辑用户 -->
	<update id="updateUser" parameterType="hashmap">
		update user u set 
			u.login_name=#{loginName},
		    u.user_name=#{userName},
		    u.mobile_phone=#{mobilePhone},
		    u.email1=#{email1},
		    u.update_time=#{updateTime},
		    u.sex=#{sex},
		    u.employ_no=#{employNo},
		    u.telphone=#{telPhone},
		    u.address=#{address}
		where u.id=${userId}
		and u.company_id=${companyId};
	</update>

	<!-- 保存用户 -->
	<insert id="saveUser" parameterType="com.galaxy.authority.bean.user.UserBean" useGeneratedKeys="true" keyProperty="id"  keyColumn="id">
		INSERT INTO `user` (
			`login_name`, 
			`user_name`, 
			`telphone`, 
			`mobile_phone`, 
			`email1`, 
			`sex`, 
			`password`, 
			`origin_password`, 
			`is_show`, 
			`is_del`, 
			`is_outtage`,
			`create_id`,
			`create_time`,
			`update_id`,
			`update_time`,
			`address`,
			`company_id` 
		)VALUES(
			#{loginName}, 
			#{userName}, 
			#{telphone}, 
			#{mobilePhone}, 
			#{email1}, 
			#{sex}, 
			#{password}, 
			#{originPassword}, 
			#{isShow}, 
			#{isDel}, 
			#{isOuttage},
			#{createId}, 
			#{createTime}, 
			#{updateId}, 
			#{updateTime},
			#{address},
			#{companyId}
		);
		<selectKey keyProperty="id" resultType="long" order="AFTER">  
            SELECT LAST_INSERT_ID();  
        </selectKey>  
	</insert>

	<!-- 获取用户资源-->
	<select id="getUserResources" parameterType="hashmap" resultType="hashmap">
		SELECT DISTINCT
		rec.id,
		rec.resource_code resourceMark,
		rec.resource_name resourceName,
		rec.resource_url resourceUrl,
		rec.resource_type resourceType,
		rec.resource_order resourceOrder,
		rec.resource_type resourceType,
		rec.style
		FROM resource rec
		INNER JOIN rel_role_resource role_rec ON role_rec.res_id = rec.id AND role_rec.is_del=0 AND role_rec.is_outtage=0
		INNER JOIN role ON role.id = role_rec.role_id AND role.is_del=0 AND role.is_outtage=0
		INNER JOIN rel_role_user role_user ON role_user.role_id = role.id AND role_user.is_del=0 AND role_user.is_outtage=0
		WHERE role_user.user_id=#{userId} and rec.is_del=0 and rec.is_outtage=0 and rec.company_id=#{companyId}
		<if test="productType != null"> and rec.product_type = #{productType}</if>
		<if test="parentId != null"> and rec.parent_id = #{parentId}</if>
		<if test="resourceType != null"> and rec.resource_type = #{resourceType}</if>
	</select>
	<!-- 获取用户数据权限-->
	<select id="getUserScope" parameterType="hashmap" resultType="hashmap">
		SELECT 
		u.id userId,
		rec.resource_code resourceMark,
		s.id spId,
		s.sp_name,
		su.other_id otherId,
		su.is_dep isDep
		FROM USER u
		INNER JOIN rel_role_user ru ON ru.user_id = u.id
		INNER JOIN role r ON r.id = ru.role_id and r.is_del=0 and r.is_outtage=0 
		INNER JOIN rel_role_resource rr ON rr.role_id = r.id
		INNER JOIN resource rec ON rec.Id = rr.res_id 
		INNER JOIN rel_role_scope rs ON rs.role_res_id = rr.id
		INNER JOIN data_scope s ON s.id = rs.sp_id
		LEFT JOIN rel_sp_users su ON su.rel_role_scope_id = rs.id
		WHERE rec.resource_code IS NOT NULL
		and u.id=#{userId} and rec.is_del=0 and rec.is_outtage=0 
		<if test="productType != null"> and rec.product_type = #{productType}</if>
		<if test="companyId != null"> and rec.company_id = #{companyId}</if>
	</select>
	<!-- 用户所在部门所有用户的ID -->
	<select id="geDepUserIds" parameterType="Integer" resultType="Integer">
	SELECT 
	u.id
	FROM USER u
	INNER JOIN rel_dep_user du ON du.user_id = u.id
	WHERE 
	u.is_del=0 and u.is_outtage=0 
	AND du.dep_id IN (SELECT dep_id FROM rel_dep_user WHERE user_id = #{userId})
	AND u.company_id = (SELECT company_id FROM USER WHERE id = #{userId})
	</select>


	<!-- 获取userid对应的用户名称-->
	<select id="getUserNameList" parameterType="hashmap" resultType="hashmap">
		select u.id toUid,u.user_name toUname
		from user u 
		where u.id in
		<foreach item="item" index="index" collection="userIdList" open="(" separator="," close=")">  
			  #{item}  
		</foreach>
	</select>

</mapper>